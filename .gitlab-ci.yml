image: docker
services:
  - mongo
  - redis

stages:
  - test
  - build
  - docker
  - deploy

test:
  stage: test
  image: maven:alpine
  script:
    - export spring_data_mongodb_host=mongo
    - export spring_redis_host=redis
    - mvn test

build:
  stage: build
  image: maven:alpine
  script:
    - mvn package -DskipTests
  artifacts:
    paths:
    - target

docker:
  stage: docker
  image: docker
  script:
    - DATE=`date +%Y%m%d`
    - TAG=$DATE-$CI_JOB_ID
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGISTER}
    - docker build -t ${DOCKER_REGISTER}/${PROJECT_NAME}:$TAG .
    - docker push ${DOCKER_REGISTER}/${PROJECT_NAME}:$TAG
    - docker tag ${DOCKER_REGISTER}/${PROJECT_NAME}:$TAG ${DOCKER_REGISTER}/${PROJECT_NAME}:latest
    - docker push ${DOCKER_REGISTER}/${PROJECT_NAME}:latest

docker:
  stage: docker
  image: docker
  script:
    - curl -u ${CATTLE_ACCESS_KEY}:${CATTLE_SECRET_KEY} \
      -X POST \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -d '{"inServiceStrategy":{"launchConfig":{"environment":{"spring_data_mongodb_host":"mongo","spring_redis_host":"redis"},"imageUuid":"docker:kerust.net:8088/javabaas","kind":"container","labels":{"io.rancher.container.pull_image":"always"},"networkMode":"managed","ports":["9000:8080/tcp"],"startOnCreate":true,"stdinOpen":true,"tty":true,"vcpu":1}}}' \
'http://rancher.kerust.net:10084/v2-beta/projects/1a259/services/1s108/?action=upgrade'